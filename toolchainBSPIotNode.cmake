# which compilers to use for C and C++
set(CMAKE_C_COMPILER   arm-none-eabi-gcc)
set(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER arm-none-eabi-gcc)
SET(CMAKE_AR  arm-none-eabi-ar)
SET(CMAKE_OBJCOPY arm-none-eabi-objcopy)
SET(CMAKE_OBJDUMP arm-none-eabi-objdump)
SET(SIZE arm-none-eabi-size)


# search headers and libraries in the target environment
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(SET_IRQ_SPI_INTERFACE_PRIO "0")
# 
set(SET_HAL_MODULE_ENABLED              True)
set(SET_HAL_ADC_MODULE_ENABLED          False)
set(SET_HAL_CAN_MODULE_ENABLED          False)
set(SET_HAL_CAN_LEGACY_MODULE_ENABLEd   False)
set(SET_HAL_COMP_MODULE_ENABLED         False)
set(SET_HAL_CORTEX_MODULE_ENABLED       True)
set(SET_HAL_CRC_MODULE_ENABLED          False)
set(SET_HAL_CRYP_MODULE_ENABLED         False)
set(SET_HAL_DAC_MODULE_ENABLED          False)
set(SET_HAL_DFSDM_MODULE_ENABLED        True)
set(SET_HAL_DMA_MODULE_ENABLED          True)
set(SET_HAL_FLASH_MODULE_ENABLED        True)
set(SET_HAL_NAND_MODULE_ENABLED         False)
set(SET_HAL_NOR_MODULE_ENABLED          False)
set(SET_HAL_SRAM_MODULE_ENABLED         False)
set(SET_HAL_GPIO_MODULE_ENABLED         True)
set(SET_HAL_I2C_MODULE_ENABLED          True)
set(SET_HAL_IWDG_MODULE_ENABLED         False)
set(SET_HAL_LCD_MODULE_ENABLED          False)
set(SET_HAL_LPTIM_MODULE_ENABLED        False)
set(SET_HAL_OPAMP_MODULE_ENABLED        False)
set(SET_HAL_PWR_MODULE_ENABLED          True)
set(SET_HAL_QSPI_MODULE_ENABLED         True)
set(SET_HAL_RCC_MODULE_ENABLED          True)
set(SET_HAL_RNG_MODULE_ENABLED          True)
set(SET_HAL_RTC_MODULE_ENABLED          True)
set(SET_HAL_SAI_MODULE_ENABLED          False)
set(SET_HAL_SD_MODULE_ENABLED           False)
set(SET_HAL_SMBUS_MODULE_ENABLED        False)
set(SET_HAL_SPI_MODULE_ENABLED          True)
set(SET_HAL_SWPMI_MODULE_ENABLED        False)
set(SET_HAL_TIM_MODULE_ENABLED          True)
set(SET_HAL_TSC_MODULE_ENABLED          False)
set(SET_HAL_UART_MODULE_ENABLED         True)
set(SET_HAL_USART_MODULE_ENABLED        False)
set(SET_HAL_IRDA_MODULE_ENABLED         False)
set(SET_HAL_SMARTCARD_MODULE_ENABLED    False)
set(SET_HAL_WWDG_MODULE_ENABLED         False)
set(SET_HAL_PCD_MODULE_ENABLED          False)
set(SET_HAL_HCD_MODULE_ENABLED          False)

set(SET_HSE_VALUE                   8000000)
set(SET_HSE_STARTUP_TIMEOUT         100)
set(SET_MSI_VALUE                   4000000)
set(SET_HSI_VALUE                   16000000)
set(SET_LSI_VALUE                   32000)
set(SET_LSE_VALUE                   32768)
set(SET_LSE_STARTUP_TIMEOUT         5000)
set(SET_EXTERNAL_SAI1_CLOCK_VALUE   48000)
set(SET_EXTERNAL_SAI2_CLOCK_VALUE   48000)
set(SET_VDD_VALUE                   3300)
set(SET_TICK_INT_PRIORITY           0x0f)
set(SET_USE_RTOS                    False)
set(SET_PREFETCH_ENABLE             False)
set(SET_INSTRUCTION_CACHE_ENABLE    True)
set(SET_DATA_CACHE_ENABLE           True)
set(SET_USE_FULL_ASSERT             False)
set(SET_USE_SPI_CRC                 True)
set(SET_DEVICE STM32L475xx)
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march?armv7-m")
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_C_FLAGS_INIT "-Os -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mabi=aapcs -Wall -ffunction-sections -fdata-sections -fno-strict-aliasing -fno-builtin -ffast-math")
set(CMAKE_CXX_FLAGS_INIT ${CMAKE_C_FLAGS_INIT})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
#set(CMAKE_SYSTEM_PROCESSOR arm)

